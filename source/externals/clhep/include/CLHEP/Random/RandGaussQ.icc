// -*- C++ -*-
//
// -----------------------------------------------------------------------
//                             HEP Random
//                         --- RandGaussQ ---
//                 inlined functions implementation file
// -----------------------------------------------------------------------
// This file is part of Geant4 (simulation toolkit for HEP).
 
// =======================================================================
// M. Fischler	  - Created: 24 Janm 2000
//
// M. Fischler    - Modified fire() to use local engine, not getTheEngine()
//		    12/13/04
// =======================================================================

// Constructors
// ------------

namespace CLHEP {

RandGaussQ::RandGaussQ(HepRandomEngine & anEngine, G4double mean,
                                                        G4double stdDev )
: RandGauss(anEngine, mean, stdDev) {}

RandGaussQ::RandGaussQ(HepRandomEngine * anEngine, G4double mean,
                                                        G4double stdDev )
: RandGauss(anEngine, mean, stdDev) {}

// Getting a Gaussian deviate - static methods
// -------------------------------------------

G4double RandGaussQ::shoot()
{
  HepRandomEngine* anEngine = HepRandom::getTheEngine();
  return transformQuick (anEngine->flat());
}

G4double RandGaussQ::shoot( HepRandomEngine* anotherEngine )
{ 
  return transformQuick  (anotherEngine->flat());
}

G4double RandGaussQ::shoot(G4double mean, G4double stdDev) {
  return shoot()*stdDev + mean;
}

G4double RandGaussQ::shoot(HepRandomEngine* anotherEngine,
                                  G4double mean, G4double stdDev) {
  return shoot(anotherEngine)*stdDev + mean;
}

// Getting a Gaussian deviate - instance methods
// ---------------------------------------------

G4double RandGaussQ::fire() {
  return transformQuick(localEngine->flat()) * defaultStdDev + defaultMean;
}

G4double RandGaussQ::fire(G4double mean, G4double stdDev) {
  return transformQuick(localEngine->flat()) * stdDev + mean;
}

}  // namespace CLHEP

