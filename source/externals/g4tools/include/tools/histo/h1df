// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file tools.license for terms.

#ifndef tools_histo_h1df
#define tools_histo_h1df

// coord is in G4double.
// weight is in G4float.

#include "h1"

namespace tools {
namespace histo {

class h1df : public h1<G4double,unsigned int,unsigned int,G4float,G4float> {
  typedef h1<G4double,unsigned int,unsigned int,G4float,G4float> parent;
public:
  static const std::string& s_class() {
    static const std::string s_v("tools::histo::h1df");
    return s_v;
  }
  const std::string& s_cls() const {return s_class();}
public:
  h1df(const std::string& a_title,unsigned int aXnumber,G4float aXmin,G4float aXmax)
  :parent(a_title,aXnumber,aXmin,aXmax){}

  h1df(const std::string& a_title,const std::vector<G4double>& a_edges)
  :parent(a_title,a_edges){}

  virtual ~h1df(){}
public:
  h1df(const h1df& a_from): parent(a_from){}
  h1df& operator=(const h1df& a_from){
    parent::operator=(a_from);
    return *this;
  }

private:static void check_instantiation() {h1df h("",10,0,1);h.gather_bins(5);}
};

}}

#endif




