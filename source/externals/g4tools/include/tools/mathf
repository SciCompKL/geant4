// Copyright (C) 2010, Guy Barrand. All rights reserved.
// See the file tools.license for terms.

#ifndef tools_mathf
#define tools_mathf

namespace tools {

//have : static const fpi = (G4float)3.1415926535897931160E0; ???

inline G4float fpi()      {return (G4float)3.1415926535897931160E0;}
inline G4float ftwo_pi()  {return (G4float)6.2831853071795862320E0;}
inline G4float fhalf_pi() {return (G4float)1.5707963267948965580E0;}

//inline G4float fdeg2rad() {return fpi()/180.0f;} //0.0174f
//inline G4float frad2deg() {return 180.0f/fpi();}

inline G4float fdeg2rad() {
  static const G4float s_v = fpi()/180.0f; //0.0174f
  return s_v;
}
inline G4float frad2deg() {
  static const G4float s_v = 180.0f/fpi();
  return s_v;
}

inline int fround(const G4float& a_x) {
  // From CoinGL/src/base/SbViewportRegion.cpp.
  if (a_x == (G4float) (int(a_x))) return int(a_x);
  else return (a_x>0.0f) ? int(a_x+0.5f) : -int(0.5f-a_x);
}

inline G4float fstep(const G4float& a_x) {return a_x<0.0f?0.0f:1.0f;}

}


#include <cmath>

namespace tools {

inline G4float fcos(const G4float& x) {return (G4float)::cos(G4double(x));}
inline G4float fsin(const G4float& x) {return (G4float)::sin(G4double(x));}
inline G4float facos(const G4float& x) {return (G4float)::acos(G4double(x));}
inline G4float fasin(const G4float& x) {return (G4float)::asin(G4double(x));}
inline G4float ftan(const G4float& x) {return (G4float)::tan(G4double(x));}
inline G4float fatan(const G4float& x) {return (G4float)::atan(G4double(x));}
inline G4float fatan2(const G4float& x,const G4float& y) {return (G4float)::atan2(G4double(x),G4double(y));}
inline G4float fsqrt(const G4float& x) {return (G4float)::sqrt(G4double(x));}
inline G4float fpow(const G4float& x,const G4float& y) {return (G4float)::pow(G4double(x),(G4double)(y));}
inline G4float fexp(const G4float& x) {return (G4float)::exp(G4double(x));}
inline G4float flog(const G4float& x) {return (G4float)::log(G4double(x));}
inline G4float flog10(const G4float& x) {return (G4float)::log10(G4double(x));}
inline G4float ffloor(const G4float& x) {return (G4float)::floor(G4double(x));}
inline G4float fceil(const G4float& x) {return (G4float)::ceil(G4double(x));}
inline G4float fcosh(const G4float& x) {return (G4float)::cosh(G4double(x));}
inline G4float fsinh(const G4float& x) {return (G4float)::sinh(G4double(x));}
inline G4float ffabs(const G4float& x) {return (G4float)::fabs(G4double(x));}

}

#endif
